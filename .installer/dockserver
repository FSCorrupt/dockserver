#!/bin/bash
####################################
# All rights reserved.              #
# started from Zero                 #
# Docker owned dockserver           #
# Docker Maintainer dockserver      #
#####################################
#####################################
# THE DOCKER ARE UNDER LICENSE      #
# NO CUSTOMIZING IS ALLOWED         #
# NO REBRANDING IS ALLOWED          #
# NO CODE MIRRORING IS ALLOWED      #
#####################################
# shellcheck disable=SC2086
# shellcheck disable=SC2006
if [[ $EUID != 0 ]]; then
    sudo "$0" "$@"
    exit $?
fi
dockserver=/opt/dockserver
run() {
if [[ -d ${dockserver} ]];then
   envmigra && $(command -v cd) ${dockserver} && $(command -v bash) install.sh
else
   usage
fi
}
####
update() {
dockserver=/opt/dockserver
clear
echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
echo "    🚀    DockServer [ UPDATE ] STARTED"
echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
     basefolder="/opt/appdata"
     compose="compose/docker-compose.yml"
     $(command -v rsync) ${dockserver}/dockserver/docker.yml $basefolder/$compose -aqhv
     if [[ -f $basefolder/$compose ]];then
        $(command -v cd) $basefolder/compose/ && docker-compose config 1>/dev/null 2>&1
        $(command -v cd) $basefolder/compose/ && docker-compose down 1>/dev/null 2>&1
        $(command -v docker) system prune --filter "label!=prune.exclude=true" -af 1>/dev/null 2>&1
        $(command -v cd) $basefolder/compose/ && docker-compose up -d --force-recreate 1>/dev/null 2>&1
     fi
     $(command -v chown) -cR 1000:1000 ${dockserver} 1>/dev/null 2>&1
     envmigra && clear
echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
echo "    🚀    DockServer [ UPDATE ] DONE"
echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
echo ""
}
####
dev() {
dockserver=/opt/dockserver
clear
echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
echo "    🚀    DockServer [ DEV - CLONING ] STARTED"
echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
     $(command -v rm) -rf ${dockserver}
     git clone --quiet -b dev https://github.com/dockserver/dockserver.git ${dockserver}
     $(command -v chown) -cR 1000:1000 ${dockserver} 1>/dev/null 2>&1
     envmigra && clear
echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
echo "    🚀    DockServer [ DEV - CLONING ] DONE"
echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
echo ""
}
####
fork() {
dockserver=/opt/dockserver
DOCK=${DOCK}
FORK=${FORK}
if [[ ${DOCK} == "-f" || ${DOCK} == "--fork" ]];then
   if [[ ${FORK} != "" ]];then
       if [[ -d ${dockserver} ]];then
clear
echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
echo "    🚀    DockServer FORK Version Pull started"
echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
     $(command -v rm) -rf ${dockserver}
     git clone --quiet ${FORK} ${dockserver}
     $(command -v chown) -cR 1000:1000 ${dockserver} 1>/dev/null 2>&1
     envmigra
echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
echo "    🚀    DockServer FORK Version Pull finished"
echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
       fi
   fi
fi
clear
}
usage() {
clear
echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
echo "    🚀    DockServer [ USAGE COMMANDS ]"
echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
echo ""
echo "   Commands :"
echo ""
echo "   dockserver -i / --install     =   open the dockserver setup"
echo "   dockserver -h / --help        =   help/usage"
echo "   dockserver -u / --update      =   update the local dockserver edition"
echo ""
echo "   dockserver -d / --dev         =   clone the dev branch of dockserver"
echo "   dockserver -f / --fork <link> =   run you own repo"
echo ""
echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
echo "    🚀    DockServer [ USAGE COMMANDS ]"
echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"

}
envmigra() {
basefolder="/opt/appdata"
dockserver="/opt/dockserver"
envmigrate="$dockserver/apps/.subactions/envmigrate.sh"
if [[ -f "$basefolder/compose/.env" ]];then $(command -v bash) $envmigrate;fi 
}

DOCK=$1
FORK=$2
case "$DOCK" in
 "" ) run ;;
 "-i" ) run ;;
 "--install" ) run ;;
 "-u" ) update ;;
 "--update" ) update ;;
 "-h" ) usage ;;
 "--help" ) usage ;;
 "-d" ) dev ;;
 "--dev" ) dev ;;
 "-f" ) fork ;;
 "--fork" ) fork ;;
esac

#E-o-F#
